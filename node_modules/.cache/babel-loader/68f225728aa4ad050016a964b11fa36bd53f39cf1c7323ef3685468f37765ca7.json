{"ast":null,"code":"var _jsxFileName = \"/Users/tusharshekhar/Downloads/quiz/src/components/QuestionBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questions from '../questions';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionBox() {\n  _s();\n  const [currentQue, setCurrentQue] = useState(0);\n  const [highlight, sethighlight] = useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [resultShow, setResultShow] = useState(false);\n\n  //Conditions for changing the questions\n  const changeQue = () => {\n    if (currentQue < questions.length - 1) {\n      setCurrentQue(currentQue + 1);\n      sethighlight(false);\n      setSelectedOption(null);\n    } else {\n      setResultShow(true);\n    }\n  };\n  //when options is clicked\n  const handleOptionClick = e => {\n    if (e.target.value === 'true') {\n      setScore(score + 1);\n      console.log(score);\n    }\n    changeQue();\n    scoreUpdate();\n  };\n\n  //For Highlighting the question\n  const handlehighlight = () => {\n    sethighlight(true);\n  };\n  //for remove the highlight of the question\n  const removehightlight = () => {\n    sethighlight(false);\n  };\n  //updating score when clicked on correct option\n  const scoreUpdate = () => {\n    const correctOptionIndex = questions[currentQue].options.findIndex(option => option.isCorrect);\n    if (selectedOption === correctOptionIndex) {\n      setScore(score + 1);\n    }\n  };\n  //After clicking on restart game it starts from the beginning\n  const restartGame = () => {\n    setCurrentQue(0);\n    sethighlight(false);\n    setScore(0);\n    setSelectedOption(null);\n    setResultShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name\",\n      children: \"QUIZZARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: resultShow ? /*#__PURE__*/_jsxDEV(Result, {\n        score: score,\n        totalScore: questions.length,\n        onRestart: restartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            style: {\n              color: highlight ? '#D22727' : 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"quenum\",\n              children: [\"Questions:\", currentQue + 1, \"of5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"quetext\",\n              children: questions[currentQue].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: questions[currentQue].options.map((options, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"opt_btn\",\n              value: options.isCorrect,\n              onClick: handleOptionClick,\n              children: options.text\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlehighlight,\n            className: \"high\",\n            children: \"Highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removehightlight,\n            className: \"high\",\n            children: \"Remove Highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionBox, \"5oSFHpVZiMFblvWlDy24ZjUpgMc=\");\n_c = QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useState","questions","Result","QuestionBox","currentQue","setCurrentQue","highlight","sethighlight","score","setScore","selectedOption","setSelectedOption","resultShow","setResultShow","changeQue","length","handleOptionClick","e","target","value","console","log","scoreUpdate","handlehighlight","removehightlight","correctOptionIndex","options","findIndex","option","isCorrect","restartGame","color","text","map","i"],"sources":["/Users/tusharshekhar/Downloads/quiz/src/components/QuestionBox.js"],"sourcesContent":["\nimport React,{useState} from 'react'\nimport questions from '../questions'\nimport Result from './Result';\n\n\nexport default function QuestionBox() {\n  const[currentQue ,setCurrentQue] = useState(0);\n  const[highlight,sethighlight] =useState(false);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [resultShow, setResultShow] = useState(false);\n\n  //Conditions for changing the questions\n  const changeQue = () => {\n    if(currentQue<questions.length-1){\n\n      setCurrentQue(currentQue + 1);\n      sethighlight(false);\n      setSelectedOption(null);\n    }\n    else {\n      setResultShow(true);\n    }\n  };\n  //when options is clicked\n  const handleOptionClick = (e) => {\n    if(e.target.value==='true'){\n      setScore(score+1)\n      console.log(score)  \n    }  \n      changeQue();\n      scoreUpdate();\n    \n  };\n\n  //For Highlighting the question\n  const handlehighlight = ()=>{\n    sethighlight(true);\n  }\n  //for remove the highlight of the question\n  const removehightlight = ()=>{\n    sethighlight(false)\n  }\n //updating score when clicked on correct option\n  const scoreUpdate = () => {\n    const correctOptionIndex = questions[currentQue].options.findIndex((option) => option.isCorrect);\n\n    if (selectedOption === correctOptionIndex) {\n      setScore(score + 1);\n    }\n  };\n//After clicking on restart game it starts from the beginning\n  const restartGame = () => {\n    setCurrentQue(0);\n    sethighlight(false);\n    setScore(0);\n    setSelectedOption(null);\n    setResultShow(false);\n  };\n  return (\n    \n    <div>\n      <p className='name'>QUIZZARD</p>\n     <div className='container'>\n     {resultShow ? (\n          <Result score={score} totalScore={questions.length} onRestart={restartGame} />\n        ) : (\n          <>\n        <div className='question'>\n        <div className='question' style={{ color: highlight ? '#D22727' : 'black' }}>\n        <span id='quenum'>Questions:{currentQue+1}of5</span><br></br>\n        <span id='quetext'>{questions[currentQue].text}</span>\n        </div>\n        </div>\n\n        <div className='options'>\n          {questions[currentQue].options.map((options,i)=>{\n            return(\n              <button key={i} className='opt_btn' value={options.isCorrect} onClick={handleOptionClick}>\n                {options.text}\n              </button>\n            )\n          })}\n          </div>\n          <div>\n           <button onClick={handlehighlight} className='high'>Highlight</button>\n        <button onClick={removehightlight} className='high'>Remove Highlight</button>\n        </div>\n          </>\n        )}\n     </div>\n    </div>\n    \n    )\n  }\n\n\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAG9B,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAC9C,MAAK,CAACM,SAAS,EAACC,YAAY,CAAC,GAAEP,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMc,SAAS,GAAG,MAAM;IACtB,IAAGV,UAAU,GAACH,SAAS,CAACc,MAAM,GAAC,CAAC,EAAC;MAE/BV,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BG,YAAY,CAAC,KAAK,CAAC;MACnBI,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MACI;MACHE,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EACD;EACA,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,IAAGA,CAAC,CAACC,MAAM,CAACC,KAAK,KAAG,MAAM,EAAC;MACzBV,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;MACjBY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;IACpB;IACEM,SAAS,EAAE;IACXQ,WAAW,EAAE;EAEjB,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG,MAAI;IAC1BhB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD;EACA,MAAMiB,gBAAgB,GAAG,MAAI;IAC3BjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACF;EACC,MAAMe,WAAW,GAAG,MAAM;IACxB,MAAMG,kBAAkB,GAAGxB,SAAS,CAACG,UAAU,CAAC,CAACsB,OAAO,CAACC,SAAS,CAAEC,MAAM,IAAKA,MAAM,CAACC,SAAS,CAAC;IAEhG,IAAInB,cAAc,KAAKe,kBAAkB,EAAE;MACzChB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACF,CAAC;EACH;EACE,MAAMsB,WAAW,GAAG,MAAM;IACxBzB,aAAa,CAAC,CAAC,CAAC;IAChBE,YAAY,CAAC,KAAK,CAAC;IACnBE,QAAQ,CAAC,CAAC,CAAC;IACXE,iBAAiB,CAAC,IAAI,CAAC;IACvBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,oBAEE;IAAA,wBACE;MAAG,SAAS,EAAC,MAAM;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAI,eACjC;MAAK,SAAS,EAAC,WAAW;MAAA,UACzBD,UAAU,gBACN,QAAC,MAAM;QAAC,KAAK,EAAEJ,KAAM;QAAC,UAAU,EAAEP,SAAS,CAACc,MAAO;QAAC,SAAS,EAAEe;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,gBAE9E;QAAA,wBACF;UAAK,SAAS,EAAC,UAAU;UAAA,uBACzB;YAAK,SAAS,EAAC,UAAU;YAAC,KAAK,EAAE;cAAEC,KAAK,EAAEzB,SAAS,GAAG,SAAS,GAAG;YAAQ,CAAE;YAAA,wBAC5E;cAAM,EAAE,EAAC,QAAQ;cAAA,WAAC,YAAU,EAACF,UAAU,GAAC,CAAC,EAAC,KAAG;YAAA;cAAA;cAAA;cAAA;YAAA,QAAO;cAAA;cAAA;cAAA;YAAA,QAAS,eAC7D;cAAM,EAAE,EAAC,SAAS;cAAA,UAAEH,SAAS,CAACG,UAAU,CAAC,CAAC4B;YAAI;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA;QAChD;UAAA;UAAA;UAAA;QAAA,QACA,eAEN;UAAK,SAAS,EAAC,SAAS;UAAA,UACrB/B,SAAS,CAACG,UAAU,CAAC,CAACsB,OAAO,CAACO,GAAG,CAAC,CAACP,OAAO,EAACQ,CAAC,KAAG;YAC9C,oBACE;cAAgB,SAAS,EAAC,SAAS;cAAC,KAAK,EAAER,OAAO,CAACG,SAAU;cAAC,OAAO,EAAEb,iBAAkB;cAAA,UACtFU,OAAO,CAACM;YAAI,GADFE,CAAC;cAAA;cAAA;cAAA;YAAA,QAEL;UAEb,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACI,eACN;UAAA,wBACC;YAAQ,OAAO,EAAEX,eAAgB;YAAC,SAAS,EAAC,MAAM;YAAA,UAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAS,eACxE;YAAQ,OAAO,EAAEC,gBAAiB;YAAC,SAAS,EAAC,MAAM;YAAA,UAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACvE;MAAA;IAEL;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAGR;AAAC,GAzFqBrB,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}