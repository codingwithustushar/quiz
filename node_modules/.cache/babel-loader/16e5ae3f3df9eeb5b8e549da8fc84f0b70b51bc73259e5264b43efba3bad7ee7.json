{"ast":null,"code":"var _jsxFileName = \"/Users/tusharshekhar/Desktop/quiz/src/components/QuestionBox.js\",\n  _s = $RefreshSig$();\n// import React,{useState} from 'react'\n// import questions from '../questions'\n// import App from '../App'\n\n// export default function QuestionBox() {\n//   const[currentQue ,setCurrentQue] = useState(0);\n//   const[highlight,sethighlight] =useState(false)\n//   const changeQue = () => {\n//     if(currentQue<questions.length-1){\n\n//       setCurrentQue(currentQue + 1);\n//       sethighlight(false);\n//     }\n//   };\n\n//   const handleOptionClick = () => {\n\n//       changeQue();\n\n//   };\n//   const handlehighlight = ()=>{\n//     sethighlight(true);\n//   }\n//   const removehightlight = ()=>{\n//     sethighlight(false)\n//   }\n//   return (\n\n//     <div>\n//       <p className='name'>QUIZZARD</p>\n//      <div className='container'>\n//         <div className='question'>\n//         <div className='question' style={{ color: highlight ? '#D22727' : 'black' }}>\n//         <span id='quenum'>Questions:{currentQue+1}of5</span><br></br>\n//         <span id='quetext'>{questions[currentQue].text}</span>\n//         </div>\n//         </div>\n\n//         <div className='options'>\n//           {questions[currentQue].options.map((options,i)=>{\n//             return(\n//               <button key={i} className=\"opt_btn\" onClick={()=>handleOptionClick(i)}>\n//                 {options.text}\n//               </button>\n//             )\n//           })}\n//           </div>\n//           <div>\n//            <button onClick={handlehighlight} className='high'>Highlight</button>\n//         <button onClick={removehightlight} className='high'>Remove Highlight</button>\n//         </div>\n\n//      </div>\n//     </div>\n\n//     )\n//   }\nimport React, { useState } from 'react';\nimport questions from '../questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionBox(_ref) {\n  _s();\n  let {\n    handleScore,\n    currentQue\n  } = _ref;\n  const [highlight, setHighlight] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const changeQue = () => {\n    if (currentQue < questions.length - 1) {\n      setHighlight(false);\n      setSelectedOption(null);\n      handleScore(selectedOption);\n    }\n  };\n  const handleOptionClick = index => {\n    setSelectedOption(index);\n    setHighlight(false);\n    changeQue();\n  };\n  const handleHighlight = () => {\n    setHighlight(true);\n  };\n  const removeHighlight = () => {\n    setHighlight(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name\",\n      children: \"QUIZZARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          style: {\n            color: highlight ? '#D22727' : 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"quenum\",\n            children: [\"Questions: \", currentQue + 1, \" of 5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"quetext\",\n            children: questions[currentQue].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQue].options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `opt_btn ${selectedOption === i ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(i),\n          children: option.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHighlight,\n          className: \"high\",\n          children: \"Highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeHighlight,\n          className: \"high\",\n          children: \"Remove Highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionBox, \"R+6UTrWsXUfbyOMq6Y7KLxH35pM=\");\n_c = QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useState","questions","QuestionBox","handleScore","currentQue","highlight","setHighlight","selectedOption","setSelectedOption","changeQue","length","handleOptionClick","index","handleHighlight","removeHighlight","color","text","options","map","option","i"],"sources":["/Users/tusharshekhar/Desktop/quiz/src/components/QuestionBox.js"],"sourcesContent":["// import React,{useState} from 'react'\n// import questions from '../questions'\n// import App from '../App'\n\n\n// export default function QuestionBox() {\n//   const[currentQue ,setCurrentQue] = useState(0);\n//   const[highlight,sethighlight] =useState(false)\n//   const changeQue = () => {\n//     if(currentQue<questions.length-1){\n\n//       setCurrentQue(currentQue + 1);\n//       sethighlight(false);\n//     }\n//   };\n\n//   const handleOptionClick = () => {\n    \n//       changeQue();\n    \n//   };\n//   const handlehighlight = ()=>{\n//     sethighlight(true);\n//   }\n//   const removehightlight = ()=>{\n//     sethighlight(false)\n//   }\n//   return (\n    \n//     <div>\n//       <p className='name'>QUIZZARD</p>\n//      <div className='container'>\n//         <div className='question'>\n//         <div className='question' style={{ color: highlight ? '#D22727' : 'black' }}>\n//         <span id='quenum'>Questions:{currentQue+1}of5</span><br></br>\n//         <span id='quetext'>{questions[currentQue].text}</span>\n//         </div>\n//         </div>\n\n//         <div className='options'>\n//           {questions[currentQue].options.map((options,i)=>{\n//             return(\n//               <button key={i} className=\"opt_btn\" onClick={()=>handleOptionClick(i)}>\n//                 {options.text}\n//               </button>\n//             )\n//           })}\n//           </div>\n//           <div>\n//            <button onClick={handlehighlight} className='high'>Highlight</button>\n//         <button onClick={removehightlight} className='high'>Remove Highlight</button>\n//         </div>\n\n\n//      </div>\n//     </div>\n    \n//     )\n//   }\nimport React, { useState } from 'react';\nimport questions from '../questions';\n\nexport default function QuestionBox({ handleScore, currentQue }) {\n  const [highlight, setHighlight] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const changeQue = () => {\n    if (currentQue < questions.length - 1) {\n      setHighlight(false);\n      setSelectedOption(null);\n      handleScore(selectedOption);\n    }\n  };\n\n  const handleOptionClick = (index) => {\n    setSelectedOption(index);\n    setHighlight(false);\n    changeQue();\n  };\n\n  const handleHighlight = () => {\n    setHighlight(true);\n  };\n\n  const removeHighlight = () => {\n    setHighlight(false);\n  };\n\n  return (\n    <div>\n      <p className=\"name\">QUIZZARD</p>\n      <div className=\"container\">\n        <div className=\"question\">\n          <div className=\"question\" style={{ color: highlight ? '#D22727' : 'black' }}>\n            <span id=\"quenum\">Questions: {currentQue + 1} of 5</span>\n            <br></br>\n            <span id=\"quetext\">{questions[currentQue].text}</span>\n          </div>\n        </div>\n\n        <div className=\"options\">\n          {questions[currentQue].options.map((option, i) => (\n            <button\n              key={i}\n              className={`opt_btn ${selectedOption === i ? 'selected' : ''}`}\n              onClick={() => handleOptionClick(i)}\n            >\n              {option.text}\n            </button>\n          ))}\n        </div>\n        <div>\n          <button onClick={handleHighlight} className=\"high\">\n            Highlight\n          </button>\n          <button onClick={removeHighlight} className=\"high\">\n            Remove Highlight\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n      \n\n  \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}